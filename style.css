@font-face {
    font-family: ShortStack;
    src: url(ShortStack-Regular.ttf);
}

:root {
    --rootColor: black;
    --squareColor: aqua;
    height: 100vh;
    width: 100%;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html {
    background-color: var(--rootColor);
}

.header {
    min-height: 20vh;
    line-height: 15vh;
    font-family: ShortStack;
    color: var(--squareColor);
    text-align: center;
    font-weight: bolder;
    font-size: 6rem;

}

.container {
    display: flex;
    justify-content: space-evenly;
    width: 100vw;
    min-height: 60vh;
}

.grid {
    display: flex;
    flex-wrap: wrap;
    width: 70vh;
    height: 70vh;
    /*margin: auto; */
}

.grid-item {
    /* width and height are calculated dynamically using DOM manipulation.*/
    /*
    width: calc(60vw / 16);
    height: calc(60vw / 16);
    */
    background-color: var(--rootColor);
    outline: 1px solid white;
    /*outline instead of border because it doesnt add 
    to the overall size of the grid-item element. Instead 
    the outline is placed on the interior of the elements border.*/
}

.inputPanel {
    display: flex;
    flex-direction: column;
    width: 20vw;
    height: 70vh;
    background-color: rgb(39, 39, 39);
    /*margin: auto; */
    align-items: center;
    justify-content: space-evenly;
    border-radius: 15px;
}

button {
    height: 5vw;
    width: 16vw;
    border-radius: 8px;
    background: var(--rootColor);
    color: white;
    cursor: pointer;
}

.buttonInUse {
    border-color: aqua;
}

.slidecontainer {
    width: 16vw;
    color: white;
    font-size: medium;
    text-align: center;
    line-height: 18pt;
}

.slider {
    -webkit-appearance: none;
    height: 1vh;
    width: 16vw;
    border-radius: 5px;
    background: var(--rootColor);
}

.slider::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 25px;
    height: 25px;
    background: var(--squareColor);
    cursor: pointer;
    border-radius: 15px;

}

/* created same functionality but using DOM manipulation
.grid-item:hover {
    background-color: var(--squareColor);
}
*/